plugins {
	id 'java'
	id 'jacoco'
	id 'org.springframework.boot' version '3.4.2'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.sofkau'
version = '1.1.1'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'org.mapstruct:mapstruct:1.6.3'
	implementation 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
	implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
	implementation 'com.github.ben-manes.caffeine:caffeine:3.2.0'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.springframework.amqp:spring-rabbit-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

jacocoTestReport {
	dependsOn test
	reports {
		html.required = true
	}
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
					"/**/AuthApplication.class",
					"/**/domain/*",
					"/**/dtos/*",
					"/**/exceptions/*",
					"/**/mappers/*",
					"/**/http/handlers/*",
					"/**/http/filters/*",
					"**/infrastructure/*"
			])
		}))
	}
}

plugins {
	id "org.sonarqube" version "6.0.1.5171"
}

sonar {
	properties {
		property "sonar.projectKey", "NVFox_sofkau-auth-ms"
		property "sonar.organization", "nvfox"
		property "sonar.host.url", "https://sonarcloud.io/"
	}
}