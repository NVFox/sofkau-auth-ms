name: docker image ci for GHCR

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build project
        run: ./gradlew build --continue --info

  sonar:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build and analyze with SonarQube
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./gradlew build sonar --continue --info 

  publish:
    needs: sonar
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Get version from Gradle
        id: gradle_version
        run: |
          chmod +x ./gradlew
          VERSION=$(grep "version = '" build.gradle | sed "s/version = '//" | sed "s/'//g")
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/nvfox/sofkau-auth-ms:${{ steps.gradle_version.outputs.VERSION }}
          build-args: |
            MONGO_URI=${{ secrets.MONGO_URI }}
            MONGO_DATA_BASE=${{ secrets.MONGO_DATA_BASE }}
            DB_HOST=${{secrets.DB_HOST }}
            DB_NAME=${{secrets.DB_NAME}}
            DB_PASS=${{secrets.DB_PASS}}
            DB_PORT=${{secrets.DB_PORT}}
            DB_USER=${{secrets.DB_USER}}
            JWT_EXP_TIME=${{secrets.JWT_EXP_TIME}}
            JWT_SECRET=${{secrets.JWT_SECRET }}
            RABBIT_HOST=${{secrets.RABBIT_HOST}}
            RABBIT_PASS=${{secrets.RABBIT_PASS}}
            RABBIT_USER=${{secrets.RABBIT_USER}}
            RABBIT_PORT=${{secrets.RABBIT_PORT}}